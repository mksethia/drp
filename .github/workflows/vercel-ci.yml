name: Vercel CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
    steps:
      - uses: actions/checkout@v3

      # Cache npm modules automatically
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      # Cache Next.js build artifacts between runs
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - run: npm install --global vercel@latest
      - run: vercel pull --yes --environment=preview --token $VERCEL_TOKEN
      - run: npm ci
      - run: npm run build
      - run: vercel deploy --prebuilt --token $VERCEL_TOKEN

  production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
    steps:
      - uses: actions/checkout@v3

      # Cache npm modules automatically
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      # Cache Next.js build artifacts between runs
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - run: npm install --global vercel@latest
      - run: vercel pull --yes --environment=production --token $VERCEL_TOKEN
      - run: npm ci
      - run: npm run build
      - run: vercel build --yes --prod
      - run: vercel deploy --prebuilt --prod --token $VERCEL_TOKEN
